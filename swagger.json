{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstories",
    "description": "API for pets",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Cool API Team"
    },
    "license": {
      "name": "We are freedom (WAF)"
    }
  },
  "host": "pets-zywq.onrender.com",
  "basePath": "/api",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "users",
      "description": "API for users authenticate"
    }
  ],

  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Bearer token in the format 'Bearer <token>'"
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "description": "Create a new user in the data base.  Duplicates are denied",
        "operationId": "addNewUser",
        "produces": ["application/json"],
        "tags": ["users"],
        "parameters": [
          {
            "name": "users",
            "in": "body",
            "description": "Registration of new user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUserReq"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/NewUserRes"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "Login a user from the data base.",
        "operationId": "loginUser",
        "produces": ["application/json"],
        "tags": ["users"],
        "parameters": [
          {
            "name": "users",
            "in": "body",
            "description": "Login of user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserReq"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/LoginUserRes"
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "description": "Logout of a user.",
        "operationId": "logoutUser",
        "produces": ["application/json"],
        "tags": ["users"],
        "parameters": [
          {
            "name": "Logout",
            "description": "Bearer token must have in the format 'Bearer {token}'"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],

        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "description": "Returns one current user, only if he loggedin",
        "produces": ["application/json"],
        "tags": ["users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Current",
            "description": "Bearer token must have in the format 'Bearer {token}'"
          }
        ],

        "responses": {
          "200": {
            "description": "A list of one current user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrentUserRes"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "description": "Updates a user by id",
        "tags": ["users"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The id of the user to update"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "The name of the user"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "The email of the user"
          },
          {
            "name": "phone",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "The phone of the user"
          },
          {
            "name": "city",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "The city of the user"
          },
          {
            "name": "birthday",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "The birthday of the user"
          },
          {
            "name": "pets",
            "in": "formData",
            "type": "array",
            "required": false,
            "description": "The pets of the user"
          },

          {
            "name": "avatar",
            "in": "formData",
            "type": "file",
            "required": false,
            "description": "The avatar image of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "definitions": {
        "User": {
          "type": "object",
          "required": ["id"],
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "birthday": {
              "type": "string"
            },
            "pets": {
              "type": "string"
            },
            "avatar": {
              "type": "file"
            }
          }
        }
      }
    }
  },

  "definitions": {
    "NewUserReq": {
      "type": "object",
      "required": true,
      "properties": {
        "name": {
          "type": "string",
          "example": "Junior"
        },
        "email": {
          "type": "string",
          "example": "junior@junior.com"
        },
        "password": {
          "type": "string",
          "example": "Junior123"
        }
      }
    },
    "NewUserRes": {
      "type": "object",
      "required": true,
      "properties": {
        "name": {
          "type": "string",
          "example": "Junior"
        },
        "email": {
          "type": "string",
          "example": "junior@junior.com"
        },
        "password": {
          "type": "string",
          "example": "Hashed password ###"
        }
      }
    },
    "LoginUserReq": {
      "type": "object",
      "required": true,
      "properties": {
        "email": {
          "type": "string",
          "example": "junior@junior.com"
        },
        "password": {
          "type": "string",
          "example": "Junior123"
        }
      }
    },
    "LoginUserRes": {
      "type": "object",
      "required": true,
      "properties": {
        "name": {
          "type": "string",
          "example": "Junior"
        },
        "email": {
          "type": "string",
          "example": "junior@junior.com"
        },
        "token": {
          "type": "string",
          "example": "Bearer <token>"
        }
      }
    },
    "CurrentUserRes": {
      "type": "object",
      "required": true,
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "LogoutUserReq": {
      "type": "object",
      "required": true,
      "properties": {
        "_id": {
          "type": "string"
        }
      }
    },

    "User": {
      "type": "object",
      "required": ["name", "email", "password"],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "avatar": {
          "type": "string",
          "format": "uri"
        },
        "phone": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "pets": {
          "type": "array",
          "items": {
            "required": [
              "petId",
              "petName",
              "petBirthday",
              "petType",
              "petAvatar"
            ],
            "type": "object",
            "properties": {
              "petId": {
                "type": "string"
              },
              "petName": {
                "type": "string"
              },
              "petBirthday": {
                "type": "string"
              },
              "petType": {
                "type": "string"
              },
              "petAvatar": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    }
  }
}
